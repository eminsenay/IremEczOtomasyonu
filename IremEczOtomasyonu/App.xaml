<Application x:Class="IremEczOtomasyonu.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:b="clr-namespace:IremEczOtomasyonu.DatePickerWatermark" 
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Storyboard x:Key="FlashError">
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" 
                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:03" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Style x:Key="myErrorTemplate" TargetType="Control">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel>
                            <TextBlock Margin="5,0,5,0" Foreground="Red" FontSize="16" VerticalAlignment="Center" 
                                       Text="*" ToolTip="{Binding ElementName=errorAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
                            <AdornedElementPlaceholder x:Name="errorAdorner" />
                        </DockPanel>
                    </ControlTemplate>
                    <!--<ControlTemplate>
                        
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder Name="mycontrol">-->
                                    <!-- Here's a technique to fill up the textbox with the message for three seconds-->
                                    <!--<Label Foreground="White" Background="Red" Margin="-3" 
                                           Content="{Binding ElementName=mycontrol, 
                                                     Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                                        <Label.Triggers>
                                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                                <BeginStoryboard Storyboard="{StaticResource FlashError}" />
                                            </EventTrigger>
                                        </Label.Triggers>
                                    </Label>
                                </AdornedElementPlaceholder>
                            </Border>-->
                            <!-- Here's a technique to put the message under the control. 
                                 Switch the StackPanel Orientation above to "Horizontal" to put this message next to the contol instead -->
                            <!--<Label Foreground="White" Background="Red" 
                                           Content="{Binding ElementName=mycontrol, 
                                                     Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                            </Label>-->
                        
                    <!--</ControlTemplate>-->
                </Setter.Value>
            </Setter>
            <!--<Style.Triggers>-->
                <!-- Set the tooltip to the error message if there is one -->
                <!--<Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" 
                            Value="{Binding 
                                    RelativeSource={x:Static RelativeSource.Self},
                                    Path=(Validation.Errors)[0].ErrorContent}" />
                </Trigger>
            </Style.Triggers>-->
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource myErrorTemplate}" />
        <Style TargetType="CheckBox" BasedOn="{StaticResource myErrorTemplate}" />
        <Style TargetType="ComboBox" BasedOn="{StaticResource myErrorTemplate}" />
        <!--<Style TargetType="DatePicker" BasedOn="{StaticResource myErrorTemplate}" />-->
        <Style TargetType="DatePicker" BasedOn="{StaticResource myErrorTemplate}">
            <Setter Property="Margin" Value="10,5"/>
            <Setter Property="b:DatePickerWatermarkBehaviour.Watermark" Value="Seçiniz"/>
        </Style>

        <!-- For the controls inside a datagrid, the error is displayed at the beginning of the row. 
        No need to add * again, the default error template should suffice. -->
        <Style TargetType="DatePicker" x:Key="DatePickerInsideDataGrid">
            <Setter Property="Margin" Value="10,5"/>
            <Setter Property="b:DatePickerWatermarkBehaviour.Watermark" Value="Seçiniz"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="TextBlockInsideDataGrid"/>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="ValidationErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel>
                            <TextBlock Margin="0" Foreground="Red" FontSize="16" VerticalAlignment="Center" Text="*" 
                                       ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=(Validation.Errors)[0].ErrorContent}"/>
                            <AdornedElementPlaceholder x:Name="errorAdorner" />
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<Style x:Key="EnglishDatePicker" TargetType="DatePicker" BasedOn="{StaticResource {x:Type DatePicker}}">
            <Setter Property="b:DatePickerWatermarkBehaviour.Watermark" Value="Please select a date:"/>
        </Style>-->
    </Application.Resources>
</Application>
